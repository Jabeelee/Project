/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.54
 * Generated at: 2021-12-16 08:52:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/F:/IT/project/CamFlex/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/camflex/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1635992040000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function joinForm_check() {\r\n");
      out.write("		var e_RegExp =/\\w+@\\w+\\.\\w+(\\.\\w+)?/; //아이디(이메일) 유효성 검사 정규식\r\n");
      out.write("		var p_RegExp = /^[a-zA-Z0-9]{8,20}$/; //비밀번호 유효성 검사 정규식\r\n");
      out.write("		var n_RegExp = /^[가-힣a-zA-Z]{0,50}$/; //이름 유효성 검사 정규식(한글,영문만 가능)\r\n");
      out.write("		var b_RegExp = /^(19[0-9][0-9]|20\\d{2})(0[0-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])$/; //생년월일 유효성 검사 정규식	\r\n");
      out.write("		var t_RegExp = /^01(?:0|1|[6-9])(?:\\d{3}|\\d{4})\\d{4}$/;//전화번호 유효성 검사 정규식\r\n");
      out.write("		\r\n");
      out.write("		var Id = document.getElementById(\"userId\"); //아이디\r\n");
      out.write("		var Pw = document.getElementById(\"userPw\"); //비밀번호\r\n");
      out.write("		var RePw = document.getElementById(\"userPw_check\"); //비밀번호 재확인\r\n");
      out.write("		var Name = document.getElementById(\"userName\"); //이름\r\n");
      out.write("		var Birth = document.getElementById(\"userBirth\"); //생년월일  \r\n");
      out.write("		var Phone = document.getElementById(\"userPhone\"); //전화번호\r\n");
      out.write("\r\n");
      out.write("		/*===============아이디 유효성===============*/\r\n");
      out.write("		//공백 입력여부 검사\r\n");
      out.write("		if (Id.value == '') {\r\n");
      out.write("			alert(\"ID를 입력해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 아이디(이메일 형식) 유효성 검사\r\n");
      out.write("		if(!e_RegExp.test(Id.value)){\r\n");
      out.write("			alert(\"아이디는 이메일 형식으로만 입력 가능합니다.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		/*===============비밀번호 유효성===============*/\r\n");
      out.write("		//공백 입력여부 검사\r\n");
      out.write("		if (Pw.value == '') {\r\n");
      out.write("			alert(\"password를 입력해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		// 비밀번호 재확인 공백 입력여부 검사\r\n");
      out.write("		if (RePw.value == '') {\r\n");
      out.write("			alert(\"비밀번호 재확인을 입력해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		//패스워드 유효성 검사\r\n");
      out.write("		if (!p_RegExp.test(Pw.value)) {\r\n");
      out.write("			alert(\"password는 8~20자의 영문 대소문자와 숫자로만 입력 해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		//비밀번호 재확인 검사\r\n");
      out.write("		if (Pw.value != RePw.value) {\r\n");
      out.write("			alert(\"비밀번호 재확인이 틀립니다. 다시 확인하여 입력바랍니다.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		} \r\n");
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		/*===============이름 유효성===============*/\r\n");
      out.write("		//공백 입력여부 검사\r\n");
      out.write("		if (Name.value == '') {\r\n");
      out.write("			alert(\"이름을 입력해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		//한글,영어 유효성 검사\r\n");
      out.write("		if (!n_RegExp.test(Name.value)) {\r\n");
      out.write("			alert(\"이름에 특수문자,숫자는 입력할수 없습니다. 다시 입력해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		/*===============생년월일 유효성===============*/\r\n");
      out.write("		//공백 입력여부 검사\r\n");
      out.write("		if (Birth.value == '') {\r\n");
      out.write("			alert(\"생년월일을 입력해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		// 생년월일 유효성 검사\r\n");
      out.write("		if (!b_RegExp.test(Birth.value)) {\r\n");
      out.write("			alert(\"생년월일 형식이 올바르지 않습니다. 다시 입력해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		/*===============전화번호 유효성===============*/\r\n");
      out.write("		//공백 입력여부 검사\r\n");
      out.write("		if (Phone.value == '') {\r\n");
      out.write("			alert(\"전화번호를 입력해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("\r\n");
      out.write("		//전화번호 유효성 검사\r\n");
      out.write("		if (!t_RegExp.test(Phone.value)) {\r\n");
      out.write("			alert(\"전화번호 형식이 올바르지 않습니다. 다시 입력해주세요.\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h2>회원가입</h2>\r\n");
      out.write("	<form name=\"insert\" action=\"/login/insert.do\" method=\"POST\" onsubmit=\"return joinForm_check()\">\r\n");
      out.write("		<!-- 아이디 --><!-- ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${path}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/login/insert.do  404-->\r\n");
      out.write("		<div>\r\n");
      out.write("			<label id=\"userInfo\">아이디</label>\r\n");
      out.write("			<input type=\"text\" id=\"m_id\" name=\"m_id\" placeholder=\"email형식으로 입력\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<p></p>\r\n");
      out.write("\r\n");
      out.write("		<!-- 비밀번호 -->\r\n");
      out.write("		<div>\r\n");
      out.write("			<label id=\"userInfo\">비밀번호</label>\r\n");
      out.write("			<input type=\"password\" id=\"m_pw\" name=\"m_pw\" placeholder=\"영문/숫자 8~20자 (특수문자x)\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<p></p>\r\n");
      out.write("\r\n");
      out.write("		<!-- 비밀번호 재확인 -->\r\n");
      out.write("		<div>\r\n");
      out.write("			<label id=\"userInfo\">비밀번호 재확인</label>\r\n");
      out.write("			<input type=\"password\" id=\"m_Pw_check\" name=\"m_Pw_check\" placeholder=\"위 비밀번호와 동일하게 입력\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<p></p>\r\n");
      out.write("\r\n");
      out.write("		<!-- 이름 -->\r\n");
      out.write("		<div>\r\n");
      out.write("			<label id=\"userInfo\">이름</label>\r\n");
      out.write("			<input type=\"text\" id=\"m_name\" name=\"m_name\" placeholder=\"특수문자 or 숫자x 50자 미만\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<p></p>\r\n");
      out.write("\r\n");
      out.write("		<!-- 생년월일 -->\r\n");
      out.write("		<div>\r\n");
      out.write("			<label id=\"userInfo\">생년월일</label>\r\n");
      out.write("			<input type=\"text\" id=\"m_birth\" name=\"m_birth\" placeholder=\"생년월일 숫자 8자리\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<p></p>\r\n");
      out.write("\r\n");
      out.write("		<!-- 전화번호 -->\r\n");
      out.write("		<div>\r\n");
      out.write("			<label id=\"userInfo\">전화번호</label>\r\n");
      out.write("			<input type=\"text\" id=\"m_phone\" name=\"m_phone\" placeholder=\"(-)를 제외한 11자\" />\r\n");
      out.write("		</div>\r\n");
      out.write("		<p></p>\r\n");
      out.write("\r\n");
      out.write("		<div>\r\n");
      out.write("			<input type=\"submit\" value=\"회원가입\" />\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
