package com.camflex.client.login.controller;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.camflex.client.login.service.LoginService;

import com.camflex.client.login.vo.LoginVO;
import com.camflex.client.member.vo.MemberVO;

@Controller
public class LoginController {
	// 로깅을 위한 변수
	private Logger log = LoggerFactory.getLogger(LoginController.class);

	@Inject
	LoginService loginService;

	/* 로그인 화면 */
	@RequestMapping(value = "/loginForm", method = RequestMethod.GET)
	public String LoginForm() {
		log.info("loginForm.do get 성공");
		return "/login/loginForm"; // views/login/loginForm.jsp로 포워드
	}

	/*
	 * 로그인 처리
	 * 
	 * @RequestMapping(value = "/login/loginCheck", method = RequestMethod.POST)
	 * public ModelAndView loginCheck(@ModelAttribute LoginVO vo, HttpSession
	 * session) throws Exception { String m_name = loginService.loginCheck(vo,
	 * session);
	 * 
	 * ModelAndView mav = new ModelAndView();
	 * 
	 * if (m_name != null) { log.info("로그인 성공");
	 * mav.setViewName("redirect:/login/listMember"); } else { log.info("로그인 실패");
	 * mav.setViewName("redirect:/login/loginForm"); } return mav; }
	 */

	/*
	 * 로그인 처리 2
	 * 
	 * @RequestMapping(value = "/login/loginCheck", method = RequestMethod.POST)
	 * public String loginCheck(MemberVO vo, HttpSession session, RedirectAttributes
	 * rttr) throws Exception { log.info("로그인 처리 POST"); log.info("C: " +
	 * vo.getM_id() + vo.getM_pw());
	 * 
	 * MemberVO memberVO = loginService.loginCheck(vo);
	 * log.info("C: 리턴VO결과(서비스에서 예외처리를 진행했으므로 null이 출력되면 코드에 문제있다는 의미) " +
	 * returnVO);
	 * 
	 * if (memberVO != null) {
	 * 
	 * session.setAttribute("id", memberVO.getM_id()); rttr.addFlashAttribute("mvo",
	 * memberVO); return "redirect:/login/listMember"; } else {
	 * 
	 * return "redirect:/login/loginForm"; } }
	 */

	/* 로그인 처리3 */
	@RequestMapping(value = "/loginCheck", method = RequestMethod.POST)
	public String loginCheck(Model model, HttpServletRequest request) {
		String m_id = request.getParameter("m_id");
		String m_pw = request.getParameter("m_pw");
		MemberVO memberVO = loginService.memberSearch(m_id, m_pw);
		try {
			model.addAttribute("m_id", memberVO.getM_id());
			model.addAttribute("m_pw", memberVO.getM_pw());
		} catch (Exception e) {
			e.printStackTrace();
		}
		return "/login/listMember";
	}

}
